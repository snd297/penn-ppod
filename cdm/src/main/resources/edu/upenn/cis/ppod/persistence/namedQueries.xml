<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_1_0.xsd"
	version="1.0">

	<named-query name="VersionInfo-getMaxVersionInfo">
		<query>select max(vi.version) from VersionInfo vi
		</query>
		<hint name="org.hibernate.comment" value="Get the maxiumum VersionInfo.version." />
	</named-query>

	<named-query name="Study-getByPPodId">
		<query>select s from Study s where s.pPodId=:pPodId</query>
		<hint name="org.hibernate.comment" value="Get a Study given its pPOD ID." />
	</named-query>

	<named-query name="Study-getByPPodIdEager">
		<query>select s from Study s left join fetch s.otuSets o left join fetch o.standardMatrices m left join fetch m.rows where s.pPodId=:pPodId</query>
		<hint name="org.hibernate.comment" value="Get a Study given its pPOD ID." />
	</named-query>

	<named-query name="Study-getVersionByPPodId">
		<query>select s.versionInfo.version from Study s where s.pPodId=:pPodId</query>
	</named-query>

	<named-query name="Study-getOTUSetInfosByStudyPPodIdAndMinVersion">
		<query>select os.id, os.pPodId, os.versionInfo.version 
		       from Study s join s.otuSets os
		       where s.pPodId=:studyPPodId and os.versionInfo.version >= :minVersion</query>
	</named-query>

	<named-query name="Study-getPPodIdLabelPairs">
		<query>select s.pPodId, s.label from Study s</query>
		<hint name="org.hibernate.comment" value="Get pPodId/label pairs for all persisted studies" />
	</named-query>


	<named-query name="OTUSet-getByPPodId">
		<query>select os from OTUSet os where os.pPodId=:pPodId</query>
		<hint name="org.hibernate.comment" value="Get an otu set given its pPodId." />
	</named-query>

	<named-query name="OTUSet-getOTUPPodIdsVersionsByOTUSetIdAndMinVersion">
		<query>select o.pPodId, o.versionInfo.version 
		       from OTUSet os join os.otus o
		       where os.id=:otuId and o.versionInfo.version >= :minVersion</query>
	</named-query>

	<named-query name="OTUSet-getMatrixInfosByOTUSetPPodIdAndMinVersion">
		<query>select m.id, m.pPodId, m.versionInfo.version 
		       from OTUSet os join os.standardMatrices m 
		       where os.pPodId=:otuSetPPodId and m.versionInfo.version >= :minVersion</query>
	</named-query>


	<named-query name="StandardMatrix-getVersionById">
		<query>select m.versionInfo.version from StandardMatrix m where m.id=:id</query>
		<hint name="org.hibernate.comment" value="Get a matrix pPOD	version given its id" />
	</named-query>

	<named-query name="StandardMatrix-getCharacterInfosByMatrixIdAndMinVersion">
		<query>select pc.id, pc.pPodId, pc.versionInfo.version 
		       from StandardMatrix m join m.characters pc 
		       where m.id=:matrixId and pc.versionInfo.version >= :minVersion</query>
	</named-query>
	<!--

		<named-query
		name="CharacterStateMatrix-getColumnPPodVersionsByMatrixId">
		<query>select versionInfo.pPodVersion from CharacterStateMatrix m join
		m.columnPPodVersionInfos versionInfo where m.id=:matrixId order by
		VERSION_INFO_POSITION</query> <hint name="org.hibernate.comment"
		value="Get a matrixs column headers pPOD versions given the matrix id"
		/> </named-query>
	-->
	<!--

		<named-query
		name="CharacterStateMatrix-getRowIdxsIdsVersionsByMatrixIdAndMinPPodVersion">
		<query>select index(r), r.id, r.pPodVersionInfo.pPodVersion from
		CharacterStateMatrix m join m.rows r where m.id=:matrixId and
		r.pPodVersionInfo.pPodVersion >= :minPPodVersion</query>
		</named-query>
	-->

	<!--

		<named-query
		name="CharacterState-getCellIdxsVersionsByRowIdAndMinVersion">
		<query>select index(c), c.pPodVersionInfo.pPodVersion from
		CharacterStateRow r join r.cells c where r.id=:rowId and
		c.pPodVersionInfo.pPodVersion >= :minVersion</query> </named-query>
	-->

	<named-query name="AttachmentNamespace-getByNamespace">
		<query>select n from AttachmentNamespace n where n.label=:namespace</query>
	</named-query>

	<named-query name="AttachmentType-getByNamespaceAndType">
		<query>select at from AttachmentType at where at.namespace.label=:namespaceLabel and at.label=:typeLabel
		</query>
		<hint name="org.hibernate.comment"
			value="Get an AttachmentType given its namespace label and type label." />
	</named-query>
</entity-mappings>