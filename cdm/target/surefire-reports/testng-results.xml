<testng-results>
  <reporter-output>
  </reporter-output>
  <suite name="PPod Fast Tests">
    <groups>
      <group name="single">
        <method signature="edu.upenn.cis.ppod.model.MolecularSequenceTest.setInNeedOfNewPPodVersion()" name="setInNeedOfNewPPodVersion" class="edu.upenn.cis.ppod.model.MolecularSequenceTest"/>
        <method signature="edu.upenn.cis.ppod.model.MolecularSequenceTest.setName()" name="setName" class="edu.upenn.cis.ppod.model.MolecularSequenceTest"/>
        <method signature="edu.upenn.cis.ppod.model.MolecularSequenceTest.setSequence()" name="setSequence" class="edu.upenn.cis.ppod.model.MolecularSequenceTest"/>
        <method signature="edu.upenn.cis.ppod.model.MolecularSequenceTest.setSequenceWithAnIllegalCharacter()" name="setSequenceWithAnIllegalCharacter" class="edu.upenn.cis.ppod.model.MolecularSequenceTest"/>
        <method signature="edu.upenn.cis.ppod.model.OTUsToMolecularSequencesTest.putHelperTest()" name="putHelperTest" class="edu.upenn.cis.ppod.model.OTUsToMolecularSequencesTest"/>
        <method signature="edu.upenn.cis.ppod.model.OTUsToMolecularSequencesTest.putHelperTestReplaceASequence()" name="putHelperTestReplaceASequence" class="edu.upenn.cis.ppod.model.OTUsToMolecularSequencesTest"/>
      </group>
      <group name="init">
        <method signature="edu.upenn.cis.ppod.FactorySetup.succeed()" name="succeed" class="edu.upenn.cis.ppod.FactorySetup"/>
        <method signature="edu.upenn.cis.ppod.model.MolecularSequenceTest.setInNeedOfNewPPodVersion()" name="setInNeedOfNewPPodVersion" class="edu.upenn.cis.ppod.model.MolecularSequenceTest"/>
        <method signature="edu.upenn.cis.ppod.model.MolecularSequenceTest.setName()" name="setName" class="edu.upenn.cis.ppod.model.MolecularSequenceTest"/>
        <method signature="edu.upenn.cis.ppod.model.MolecularSequenceTest.setSequence()" name="setSequence" class="edu.upenn.cis.ppod.model.MolecularSequenceTest"/>
        <method signature="edu.upenn.cis.ppod.model.MolecularSequenceTest.setSequenceWithAnIllegalCharacter()" name="setSequenceWithAnIllegalCharacter" class="edu.upenn.cis.ppod.model.MolecularSequenceTest"/>
        <method signature="edu.upenn.cis.ppod.model.OTUsToMolecularSequencesTest.putHelperTest()" name="putHelperTest" class="edu.upenn.cis.ppod.model.OTUsToMolecularSequencesTest"/>
        <method signature="edu.upenn.cis.ppod.model.OTUsToMolecularSequencesTest.putHelperTestReplaceASequence()" name="putHelperTestReplaceASequence" class="edu.upenn.cis.ppod.model.OTUsToMolecularSequencesTest"/>
      </group>
      <group name="fast">
        <method signature="edu.upenn.cis.ppod.model.DNASequenceTest.testIsLegal()" name="testIsLegal" class="edu.upenn.cis.ppod.model.DNASequenceTest"/>
        <method signature="edu.upenn.cis.ppod.model.DNASequenceTest.testIsLegalShouldReturnFalse()" name="testIsLegalShouldReturnFalse" class="edu.upenn.cis.ppod.model.DNASequenceTest"/>
        <method signature="edu.upenn.cis.ppod.model.MolecularSequenceTest.setInNeedOfNewPPodVersion()" name="setInNeedOfNewPPodVersion" class="edu.upenn.cis.ppod.model.MolecularSequenceTest"/>
        <method signature="edu.upenn.cis.ppod.model.MolecularSequenceTest.setName()" name="setName" class="edu.upenn.cis.ppod.model.MolecularSequenceTest"/>
        <method signature="edu.upenn.cis.ppod.model.MolecularSequenceTest.setSequence()" name="setSequence" class="edu.upenn.cis.ppod.model.MolecularSequenceTest"/>
        <method signature="edu.upenn.cis.ppod.model.MolecularSequenceTest.setSequenceWithAnIllegalCharacter()" name="setSequenceWithAnIllegalCharacter" class="edu.upenn.cis.ppod.model.MolecularSequenceTest"/>
        <method signature="edu.upenn.cis.ppod.model.OTUsToMolecularSequencesTest.putHelperTest()" name="putHelperTest" class="edu.upenn.cis.ppod.model.OTUsToMolecularSequencesTest"/>
        <method signature="edu.upenn.cis.ppod.model.OTUsToMolecularSequencesTest.putHelperTestReplaceASequence()" name="putHelperTestReplaceASequence" class="edu.upenn.cis.ppod.model.OTUsToMolecularSequencesTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateCellTest.afterUnmarshal()" name="afterUnmarshal" class="edu.upenn.cis.ppod.model.CharacterStateCellTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateCellTest.beforeMarshal()" name="beforeMarshal" class="edu.upenn.cis.ppod.model.CharacterStateCellTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateCellTest.beforeMarshalBeforeTypeHasBeenSet()" name="beforeMarshalBeforeTypeHasBeenSet" class="edu.upenn.cis.ppod.model.CharacterStateCellTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateCellTest.getStatesWhenCellHasMultipleStates()" name="getStatesWhenCellHasMultipleStates" class="edu.upenn.cis.ppod.model.CharacterStateCellTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateCellTest.getStatesWhenCellHasOneState()" name="getStatesWhenCellHasOneState" class="edu.upenn.cis.ppod.model.CharacterStateCellTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateCellTest.setStatesForACellThatDoesNotBelongToARow()" name="setStatesForACellThatDoesNotBelongToARow" class="edu.upenn.cis.ppod.model.CharacterStateCellTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateCellTest.setTypeAndStatesFromPolymorhpicToInapplicable()" name="setTypeAndStatesFromPolymorhpicToInapplicable" class="edu.upenn.cis.ppod.model.CharacterStateCellTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateCellTest.setTypeAndStatesFromSingleToInapplicable()" name="setTypeAndStatesFromSingleToInapplicable" class="edu.upenn.cis.ppod.model.CharacterStateCellTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateCellTest.setTypeAndStatesInapplicable()" name="setTypeAndStatesInapplicable" class="edu.upenn.cis.ppod.model.CharacterStateCellTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateCellTest.setTypeAndStatesPolymorphic()" name="setTypeAndStatesPolymorphic" class="edu.upenn.cis.ppod.model.CharacterStateCellTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateCellTest.setTypeAndStatesPolymorphicTooFewStates()" name="setTypeAndStatesPolymorphicTooFewStates" class="edu.upenn.cis.ppod.model.CharacterStateCellTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateCellTest.setTypeAndStatesSingle()" name="setTypeAndStatesSingle" class="edu.upenn.cis.ppod.model.CharacterStateCellTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateCellTest.setTypeAndStatesUnassigned()" name="setTypeAndStatesUnassigned" class="edu.upenn.cis.ppod.model.CharacterStateCellTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateCellTest.setTypeAndStatesUncertainTooFewStates()" name="setTypeAndStatesUncertainTooFewStates" class="edu.upenn.cis.ppod.model.CharacterStateCellTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateCellTest.setUncertainStates()" name="setUncertainStates" class="edu.upenn.cis.ppod.model.CharacterStateCellTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateMatrixTest.beforeMarshal()" name="beforeMarshal" class="edu.upenn.cis.ppod.model.CharacterStateMatrixTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateMatrixTest.moveCharacter()" name="moveCharacter" class="edu.upenn.cis.ppod.model.CharacterStateMatrixTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateMatrixTest.replaceCharacters()" name="replaceCharacters" class="edu.upenn.cis.ppod.model.CharacterStateMatrixTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateMatrixTest.replaceRow()" name="replaceRow" class="edu.upenn.cis.ppod.model.CharacterStateMatrixTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateMatrixTest.setCharacters()" name="setCharacters" class="edu.upenn.cis.ppod.model.CharacterStateMatrixTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateMatrixTest.setCharactersW2EqualsCharacters()" name="setCharactersW2EqualsCharacters" class="edu.upenn.cis.ppod.model.CharacterStateMatrixTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateMatrixTest.setCharactersWithEqualsCharacters()" name="setCharactersWithEqualsCharacters" class="edu.upenn.cis.ppod.model.CharacterStateMatrixTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateMatrixTest.setColumnPPodVersionInfos()" name="setColumnPPodVersionInfos" class="edu.upenn.cis.ppod.model.CharacterStateMatrixTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateMatrixTest.setDescription()" name="setDescription" class="edu.upenn.cis.ppod.model.CharacterStateMatrixTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateMatrixTest.setOTUsWReorderedOTUs()" name="setOTUsWReorderedOTUs" class="edu.upenn.cis.ppod.model.CharacterStateMatrixTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateMatrixTest.setOTUsWSameOTUs()" name="setOTUsWSameOTUs" class="edu.upenn.cis.ppod.model.CharacterStateMatrixTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateMatrixTest.setOTUsWithLessOTUs()" name="setOTUsWithLessOTUs" class="edu.upenn.cis.ppod.model.CharacterStateMatrixTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateMatrixTest.setWithSameRow()" name="setWithSameRow" class="edu.upenn.cis.ppod.model.CharacterStateMatrixTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateRowTest.addCellToMatrixThatHasNoCharacters()" name="addCellToMatrixThatHasNoCharacters" class="edu.upenn.cis.ppod.model.CharacterStateRowTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateRowTest.addCellToMatrixWOneCharacter()" name="addCellToMatrixWOneCharacter" class="edu.upenn.cis.ppod.model.CharacterStateRowTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateRowTest.addCellToMatrixWTooFewCharacters()" name="addCellToMatrixWTooFewCharacters" class="edu.upenn.cis.ppod.model.CharacterStateRowTest"/>
        <method signature="edu.upenn.cis.ppod.model.CharacterStateRowTest.addCellToRowThatsNotInAMatrix()" name="addCellToRowThatsNotInAMatrix" class="edu.upenn.cis.ppod.model.CharacterStateRowTest"/>
        <method signature="edu.upenn.cis.ppod.model.DNAStateTest.of()" name="of" class="edu.upenn.cis.ppod.model.DNAStateTest"/>
        <method signature="edu.upenn.cis.ppod.model.DNAStateTest.ofIllegalArg()" name="ofIllegalArg" class="edu.upenn.cis.ppod.model.DNAStateTest"/>
        <method signature="edu.upenn.cis.ppod.model.MolecularStateMatrixTest.setCharacters()" name="setCharacters" class="edu.upenn.cis.ppod.model.MolecularStateMatrixTest"/>
        <method signature="edu.upenn.cis.ppod.model.OTUSetTest.addOTU()" name="addOTU" class="edu.upenn.cis.ppod.model.OTUSetTest"/>
        <method signature="edu.upenn.cis.ppod.model.OTUSetTest.addOTUWAlreadyContainedOTU()" name="addOTUWAlreadyContainedOTU" class="edu.upenn.cis.ppod.model.OTUSetTest"/>
        <method signature="edu.upenn.cis.ppod.model.OTUSetTest.addOTUWDuplicateLabel()" name="addOTUWDuplicateLabel" class="edu.upenn.cis.ppod.model.OTUSetTest"/>
        <method signature="edu.upenn.cis.ppod.model.OTUSetTest.clearOTUs()" name="clearOTUs" class="edu.upenn.cis.ppod.model.OTUSetTest"/>
        <method signature="edu.upenn.cis.ppod.model.OTUSetTest.removeMatrix()" name="removeMatrix" class="edu.upenn.cis.ppod.model.OTUSetTest"/>
        <method signature="edu.upenn.cis.ppod.model.OTUSetTest.removeOTU()" name="removeOTU" class="edu.upenn.cis.ppod.model.OTUSetTest"/>
        <method signature="edu.upenn.cis.ppod.model.OTUSetTest.removeTreeSet()" name="removeTreeSet" class="edu.upenn.cis.ppod.model.OTUSetTest"/>
        <method signature="edu.upenn.cis.ppod.model.OTUSetTest.resetWhenNotInNeedOfNewPPodVersionInfo()" name="resetWhenNotInNeedOfNewPPodVersionInfo" class="edu.upenn.cis.ppod.model.OTUSetTest"/>
        <method signature="edu.upenn.cis.ppod.model.OTUSetTest.setDNASequenceSets()" name="setDNASequenceSets" class="edu.upenn.cis.ppod.model.OTUSetTest"/>
        <method signature="edu.upenn.cis.ppod.model.OTUSetTest.setDescription()" name="setDescription" class="edu.upenn.cis.ppod.model.OTUSetTest"/>
        <method signature="edu.upenn.cis.ppod.model.OTUSetTest.setTreeSets()" name="setTreeSets" class="edu.upenn.cis.ppod.model.OTUSetTest"/>
        <method signature="edu.upenn.cis.ppod.model.PPodEntityTest.addAttachment()" name="addAttachment" class="edu.upenn.cis.ppod.model.PPodEntityTest"/>
        <method signature="edu.upenn.cis.ppod.model.PPodEntityTest.beforeMarahal()" name="beforeMarahal" class="edu.upenn.cis.ppod.model.PPodEntityTest"/>
        <method signature="edu.upenn.cis.ppod.model.PPodEntityTest.getMarshalled()" name="getMarshalled" class="edu.upenn.cis.ppod.model.PPodEntityTest"/>
        <method signature="edu.upenn.cis.ppod.model.PPodEntityTest.removeAttachment()" name="removeAttachment" class="edu.upenn.cis.ppod.model.PPodEntityTest"/>
        <method signature="edu.upenn.cis.ppod.saveorupdate.SaveOrUpdateCharacterStateMatrixTest.deleteCharacter(edu.upenn.cis.ppod.model.Matrix)" name="deleteCharacter" class="edu.upenn.cis.ppod.saveorupdate.SaveOrUpdateCharacterStateMatrixTest"/>
        <method signature="edu.upenn.cis.ppod.saveorupdate.SaveOrUpdateCharacterStateMatrixTest.moveCharacters(edu.upenn.cis.ppod.model.Matrix)" name="moveCharacters" class="edu.upenn.cis.ppod.saveorupdate.SaveOrUpdateCharacterStateMatrixTest"/>
        <method signature="edu.upenn.cis.ppod.saveorupdate.SaveOrUpdateCharacterStateMatrixTest.moveRows(edu.upenn.cis.ppod.model.Matrix)" name="moveRows" class="edu.upenn.cis.ppod.saveorupdate.SaveOrUpdateCharacterStateMatrixTest"/>
        <method signature="edu.upenn.cis.ppod.saveorupdate.SaveOrUpdateCharacterStateMatrixTest.save(edu.upenn.cis.ppod.model.Matrix)" name="save" class="edu.upenn.cis.ppod.saveorupdate.SaveOrUpdateCharacterStateMatrixTest"/>
        <method signature="edu.upenn.cis.ppod.saveorupdate.MergeAttachmentTest.mergeOnBlankTarget()" name="mergeOnBlankTarget" class="edu.upenn.cis.ppod.saveorupdate.MergeAttachmentTest"/>
      </group>
    </groups>
    <test name="fast">
      <class name="edu.upenn.cis.ppod.saveorupdate.SaveOrUpdateCharacterStateMatrixTest">
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:09:59Z" finished-at="2010-04-28T13:09:59Z">
        </test-method>
        <test-method status="PASS" signature="deleteCharacter(edu.upenn.cis.ppod.model.Matrix)" name="deleteCharacter" duration-ms="764" started-at="2010-04-28T13:09:59Z" finished-at="2010-04-28T13:10:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[UUPPodEntity(PPodEntity(PersistentObject(edu.upenn.cis.ppod.model.Matrix@560508beid=nullversion=null)pPodVersionInfo=nullpPodVersion=null)pPodId=null)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="1" started-at="2010-04-28T13:10:00Z" finished-at="2010-04-28T13:10:00Z">
        </test-method>
        <test-method status="PASS" signature="deleteCharacter(edu.upenn.cis.ppod.model.Matrix)" name="deleteCharacter" duration-ms="0" started-at="2010-04-28T13:10:00Z" finished-at="2010-04-28T13:10:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[UUPPodEntity(PPodEntity(PersistentObject(edu.upenn.cis.ppod.model.DNAMatrix@57c501f7id=nullversion=null)pPodVersionInfo=nullpPodVersion=null)pPodId=null)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:10:01Z" finished-at="2010-04-28T13:10:01Z">
        </test-method>
        <test-method status="PASS" signature="moveCharacters(edu.upenn.cis.ppod.model.Matrix)" name="moveCharacters" duration-ms="702" started-at="2010-04-28T13:10:01Z" finished-at="2010-04-28T13:10:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[UUPPodEntity(PPodEntity(PersistentObject(edu.upenn.cis.ppod.model.Matrix@50e26ae7id=nullversion=null)pPodVersionInfo=nullpPodVersion=null)pPodId=null)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="moveCharacters(edu.upenn.cis.ppod.model.Matrix)" name="moveCharacters" duration-ms="0" started-at="2010-04-28T13:10:02Z" finished-at="2010-04-28T13:10:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[UUPPodEntity(PPodEntity(PersistentObject(edu.upenn.cis.ppod.model.DNAMatrix@2587b08did=nullversion=null)pPodVersionInfo=nullpPodVersion=null)pPodId=null)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:10:02Z" finished-at="2010-04-28T13:10:02Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:10:03Z" finished-at="2010-04-28T13:10:03Z">
        </test-method>
        <test-method status="PASS" signature="moveRows(edu.upenn.cis.ppod.model.Matrix)" name="moveRows" duration-ms="387" started-at="2010-04-28T13:10:03Z" finished-at="2010-04-28T13:10:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[UUPPodEntity(PPodEntity(PersistentObject(edu.upenn.cis.ppod.model.Matrix@161abc23id=nullversion=null)pPodVersionInfo=nullpPodVersion=null)pPodId=null)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="1" started-at="2010-04-28T13:10:03Z" finished-at="2010-04-28T13:10:03Z">
        </test-method>
        <test-method status="PASS" signature="moveRows(edu.upenn.cis.ppod.model.Matrix)" name="moveRows" duration-ms="1106" started-at="2010-04-28T13:10:03Z" finished-at="2010-04-28T13:10:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[UUPPodEntity(PPodEntity(PersistentObject(edu.upenn.cis.ppod.model.DNAMatrix@61438934id=nullversion=null)pPodVersionInfo=nullpPodVersion=null)pPodId=null)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:10:05Z" finished-at="2010-04-28T13:10:05Z">
        </test-method>
        <test-method status="PASS" signature="save(edu.upenn.cis.ppod.model.Matrix)" name="save" duration-ms="318" started-at="2010-04-28T13:10:05Z" finished-at="2010-04-28T13:10:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[UUPPodEntity(PPodEntity(PersistentObject(edu.upenn.cis.ppod.model.Matrix@59d204cdid=nullversion=null)pPodVersionInfo=nullpPodVersion=null)pPodId=null)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:10:05Z" finished-at="2010-04-28T13:10:05Z">
        </test-method>
        <test-method status="PASS" signature="save(edu.upenn.cis.ppod.model.Matrix)" name="save" duration-ms="750" started-at="2010-04-28T13:10:05Z" finished-at="2010-04-28T13:10:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[UUPPodEntity(PPodEntity(PersistentObject(edu.upenn.cis.ppod.model.DNAMatrix@78d68713id=nullversion=null)pPodVersionInfo=nullpPodVersion=null)pPodId=null)]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="edu.upenn.cis.ppod.model.MolecularSequenceTest">
        <test-method status="PASS" signature="setInNeedOfNewPPodVersion()" name="setInNeedOfNewPPodVersion" duration-ms="39" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setName()" name="setName" duration-ms="1" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setSequence()" name="setSequence" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setSequenceWithAnIllegalCharacter()" name="setSequenceWithAnIllegalCharacter" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Position 4 is [l] which is not a DNA state]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Position 4 is [l] which is not a DNA state
	at edu.upenn.cis.ppod.model.MolecularSequence.setSequence(MolecularSequence.java:213)
	at edu.upenn.cis.ppod.model.MolecularSequenceTest.setSequenceWithAnIllegalCharacter(MolecularSequenceTest.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:644)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:546)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:700)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1002)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:909)
	at org.testng.TestRunner.privateRun(TestRunner.java:618)
	at org.testng.TestRunner.run(TestRunner.java:499)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:915)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:879)
	at org.testng.TestNG.run(TestNG.java:787)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:74)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1009)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
      </class>
      <class name="edu.upenn.cis.ppod.model.CharacterStateCellTest">
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="10" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="afterUnmarshal()" name="afterUnmarshal" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="3" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMarshal()" name="beforeMarshal" duration-ms="2" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="2" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMarshalBeforeTypeHasBeenSet()" name="beforeMarshalBeforeTypeHasBeenSet" duration-ms="1" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[can't marshal a cell without a type]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: can't marshal a cell without a type
	at com.google.common.base.Preconditions.checkState(Preconditions.java:139)
	at edu.upenn.cis.ppod.model.CategoricalCell.beforeMarshal(CharacterStateCell.java:229)
	at edu.upenn.cis.ppod.model.CharacterStateCellTest.beforeMarshalBeforeTypeHasBeenSet(CharacterStateCellTest.java:248)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:644)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:546)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:700)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1002)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:909)
	at org.testng.TestRunner.privateRun(TestRunner.java:618)
	at org.testng.TestRunner.run(TestRunner.java:499)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:915)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:879)
	at org.testng.TestNG.run(TestNG.java:787)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:74)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1009)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="3" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="getStatesWhenCellHasMultipleStates()" name="getStatesWhenCellHasMultipleStates" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="3" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="getStatesWhenCellHasOneState()" name="getStatesWhenCellHasOneState" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="2" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setStatesForACellThatDoesNotBelongToARow()" name="setStatesForACellThatDoesNotBelongToARow" duration-ms="1" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[this cell has not been assigned a row]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: this cell has not been assigned a row
	at com.google.common.base.Preconditions.checkState(Preconditions.java:139)
	at edu.upenn.cis.ppod.model.CategoricalCell.checkIncomingState(CharacterStateCell.java:240)
	at edu.upenn.cis.ppod.model.CategoricalCell.setTypeAndStates(CharacterStateCell.java:549)
	at edu.upenn.cis.ppod.model.CategoricalCell.setSingleState(CharacterStateCell.java:510)
	at edu.upenn.cis.ppod.model.CharacterStateCellTest.setStatesForACellThatDoesNotBelongToARow(CharacterStateCellTest.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:644)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:546)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:700)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1002)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:909)
	at org.testng.TestRunner.privateRun(TestRunner.java:618)
	at org.testng.TestRunner.run(TestRunner.java:499)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:915)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:879)
	at org.testng.TestNG.run(TestNG.java:787)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:74)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1009)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="3" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setTypeAndStatesFromPolymorhpicToInapplicable()" name="setTypeAndStatesFromPolymorhpicToInapplicable" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="2" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setTypeAndStatesFromSingleToInapplicable()" name="setTypeAndStatesFromSingleToInapplicable" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="3" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setTypeAndStatesInapplicable()" name="setTypeAndStatesInapplicable" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="3" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setTypeAndStatesPolymorphic()" name="setTypeAndStatesPolymorphic" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="2" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setTypeAndStatesPolymorphicTooFewStates()" name="setTypeAndStatesPolymorphicTooFewStates" duration-ms="1" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[polymorphic states must be > 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: polymorphic states must be > 1
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:84)
	at edu.upenn.cis.ppod.model.CategoricalCell.setPolymorphicStates(CharacterStateCell.java:465)
	at edu.upenn.cis.ppod.model.CharacterStateCellTest.setTypeAndStatesPolymorphicTooFewStates(CharacterStateCellTest.java:210)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:644)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:546)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:700)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1002)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:909)
	at org.testng.TestRunner.privateRun(TestRunner.java:618)
	at org.testng.TestRunner.run(TestRunner.java:499)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:915)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:879)
	at org.testng.TestNG.run(TestNG.java:787)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:74)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1009)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="3" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setTypeAndStatesSingle()" name="setTypeAndStatesSingle" duration-ms="2" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="13" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setTypeAndStatesUnassigned()" name="setTypeAndStatesUnassigned" duration-ms="1" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="6" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setTypeAndStatesUncertainTooFewStates()" name="setTypeAndStatesUncertainTooFewStates" duration-ms="1" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[uncertain states must be > 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: uncertain states must be > 1
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:84)
	at edu.upenn.cis.ppod.model.CategoricalCell.setUncertainStates(CharacterStateCell.java:604)
	at edu.upenn.cis.ppod.model.CharacterStateCellTest.setTypeAndStatesUncertainTooFewStates(CharacterStateCellTest.java:228)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:644)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:546)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:700)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1002)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:909)
	at org.testng.TestRunner.privateRun(TestRunner.java:618)
	at org.testng.TestRunner.run(TestRunner.java:499)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:915)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:879)
	at org.testng.TestNG.run(TestNG.java:787)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:74)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1009)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="4" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setUncertainStates()" name="setUncertainStates" duration-ms="1" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
      </class>
      <class name="edu.upenn.cis.ppod.model.DNAStateTest">
        <test-method status="PASS" signature="of()" name="of" duration-ms="3" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="ofIllegalArg()" name="ofIllegalArg" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[stateNumber must be 0, 1, 2, or 3]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: stateNumber must be 0, 1, 2, or 3
	at edu.upenn.cis.ppod.model.DNAState$Nucleotide.of(DNAState.java:88)
	at edu.upenn.cis.ppod.model.DNAStateTest.ofIllegalArg(DNAStateTest.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:644)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:546)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:700)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1002)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:909)
	at org.testng.TestRunner.privateRun(TestRunner.java:618)
	at org.testng.TestRunner.run(TestRunner.java:499)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:915)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:879)
	at org.testng.TestNG.run(TestNG.java:787)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:74)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1009)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
      </class>
      <class name="edu.upenn.cis.ppod.model.DNASequenceTest">
        <test-method status="PASS" signature="testIsLegalShouldReturnFalse()" name="testIsLegalShouldReturnFalse" duration-ms="1" started-at="2010-04-28T13:10:06Z" finished-at="2010-04-28T13:10:06Z">
        </test-method>
        <test-method status="PASS" signature="testIsLegal()" name="testIsLegal" duration-ms="0" started-at="2010-04-28T13:10:06Z" finished-at="2010-04-28T13:10:06Z">
        </test-method>
      </class>
      <class name="edu.upenn.cis.ppod.model.CharacterStateRowTest">
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="1" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="addCellToMatrixThatHasNoCharacters()" name="addCellToMatrixThatHasNoCharacters" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[the matrix has different number of characters 0 than cells 1 and cells > 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: the matrix has different number of characters 0 than cells 1 and cells > 0
	at com.google.common.base.Preconditions.checkState(Preconditions.java:139)
	at edu.upenn.cis.ppod.model.CategoricalRow.setCells(CharacterStateRow.java:220)
	at edu.upenn.cis.ppod.model.CharacterStateRowTest.addCellToMatrixThatHasNoCharacters(CharacterStateRowTest.java:105)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:644)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:546)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:700)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1002)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:909)
	at org.testng.TestRunner.privateRun(TestRunner.java:618)
	at org.testng.TestRunner.run(TestRunner.java:499)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:915)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:879)
	at org.testng.TestNG.run(TestNG.java:787)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:74)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1009)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="addCellToMatrixWOneCharacter()" name="addCellToMatrixWOneCharacter" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="addCellToMatrixWTooFewCharacters()" name="addCellToMatrixWTooFewCharacters" duration-ms="1" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[the matrix has different number of characters 1 than cells 2 and cells > 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: the matrix has different number of characters 1 than cells 2 and cells > 0
	at com.google.common.base.Preconditions.checkState(Preconditions.java:139)
	at edu.upenn.cis.ppod.model.CategoricalRow.setCells(CharacterStateRow.java:220)
	at edu.upenn.cis.ppod.model.CharacterStateRowTest.addCellToMatrixWTooFewCharacters(CharacterStateRowTest.java:114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:644)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:546)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:700)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1002)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:909)
	at org.testng.TestRunner.privateRun(TestRunner.java:618)
	at org.testng.TestRunner.run(TestRunner.java:499)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:915)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:879)
	at org.testng.TestNG.run(TestNG.java:787)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:74)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1009)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="1" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="addCellToRowThatsNotInAMatrix()" name="addCellToRowThatsNotInAMatrix" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[This row hasn't been added to a matrix yet]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: This row hasn't been added to a matrix yet
	at com.google.common.base.Preconditions.checkState(Preconditions.java:139)
	at edu.upenn.cis.ppod.model.CategoricalRow.setCells(CharacterStateRow.java:217)
	at edu.upenn.cis.ppod.model.CharacterStateRowTest.addCellToRowThatsNotInAMatrix(CharacterStateRowTest.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:644)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:546)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:700)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1002)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:909)
	at org.testng.TestRunner.privateRun(TestRunner.java:618)
	at org.testng.TestRunner.run(TestRunner.java:499)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:915)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:879)
	at org.testng.TestNG.run(TestNG.java:787)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:74)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1009)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
      </class>
      <class name="edu.upenn.cis.ppod.model.OTUSetTest">
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="114" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="addOTU()" name="addOTU" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="addOTUWAlreadyContainedOTU()" name="addOTUWAlreadyContainedOTU" duration-ms="1" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="addOTUWDuplicateLabel()" name="addOTUWDuplicateLabel" duration-ms="1" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[OTUSet labeled 'null' already has an OTU labeled 'otu0']]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: OTUSet labeled 'null' already has an OTU labeled 'otu0'
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:84)
	at edu.upenn.cis.ppod.model.OTUSet.addOTUWithoutSetOTUsOnChildren(OTUSet.java:210)
	at edu.upenn.cis.ppod.model.OTUSet.setOTUs(OTUSet.java:514)
	at edu.upenn.cis.ppod.model.OTUSetTest.addOTUWDuplicateLabel(OTUSetTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:644)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:546)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:700)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1002)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:909)
	at org.testng.TestRunner.privateRun(TestRunner.java:618)
	at org.testng.TestRunner.run(TestRunner.java:499)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:915)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:879)
	at org.testng.TestNG.run(TestNG.java:787)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:74)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1009)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="1" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="clearOTUs()" name="clearOTUs" duration-ms="1" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="removeMatrix()" name="removeMatrix" duration-ms="2" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="3" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="removeOTU()" name="removeOTU" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="removeTreeSet()" name="removeTreeSet" duration-ms="1" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="1" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="1" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="resetWhenNotInNeedOfNewPPodVersionInfo()" name="resetWhenNotInNeedOfNewPPodVersionInfo" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setDNASequenceSets()" name="setDNASequenceSets" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setDescription()" name="setDescription" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setTreeSets()" name="setTreeSets" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
      </class>
      <class name="edu.upenn.cis.ppod.saveorupdate.MergeAttachmentTest">
        <test-method status="PASS" signature="mergeOnBlankTarget()" name="mergeOnBlankTarget" duration-ms="22" started-at="2010-04-28T13:10:06Z" finished-at="2010-04-28T13:10:06Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:10:06Z" finished-at="2010-04-28T13:10:06Z">
        </test-method>
      </class>
      <class name="edu.upenn.cis.ppod.model.MolecularStateMatrixTest">
        <test-method status="PASS" signature="setCharacters()" name="setCharacters" duration-ms="6" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
      </class>
      <class name="edu.upenn.cis.ppod.model.OTUsToMolecularSequencesTest">
        <test-method status="PASS" signature="putHelperTest()" name="putHelperTest" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="putHelperTestReplaceASequence()" name="putHelperTestReplaceASequence" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
      </class>
      <class name="edu.upenn.cis.ppod.model.CharacterStateMatrixTest">
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="7" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMarshal()" name="beforeMarshal" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="moveCharacter()" name="moveCharacter" duration-ms="12" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="replaceCharacters()" name="replaceCharacters" duration-ms="1" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="replaceRow()" name="replaceRow" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setCharacters()" name="setCharacters" duration-ms="1" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="1" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setCharactersW2EqualsCharacters()" name="setCharactersW2EqualsCharacters" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[two characters are the same character0 at positions 0 and 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: two characters are the same character0 at positions 0 and 0
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:84)
	at edu.upenn.cis.ppod.model.Matrix.setCharacters(CharacterStateMatrix.java:535)
	at edu.upenn.cis.ppod.model.CharacterStateMatrixTest.setCharactersW2EqualsCharacters(CharacterStateMatrixTest.java:362)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:644)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:546)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:700)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1002)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:909)
	at org.testng.TestRunner.privateRun(TestRunner.java:618)
	at org.testng.TestRunner.run(TestRunner.java:499)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:915)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:879)
	at org.testng.TestNG.run(TestNG.java:787)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:74)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1009)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setCharactersWithEqualsCharacters()" name="setCharactersWithEqualsCharacters" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setColumnPPodVersionInfos()" name="setColumnPPodVersionInfos" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setDescription()" name="setDescription" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="1" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setOTUsWReorderedOTUs()" name="setOTUsWReorderedOTUs" duration-ms="4" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setOTUsWSameOTUs()" name="setOTUsWSameOTUs" duration-ms="1" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setOTUsWithLessOTUs()" name="setOTUsWithLessOTUs" duration-ms="1" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="1" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="setWithSameRow()" name="setWithSameRow" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
      </class>
      <class name="edu.upenn.cis.ppod.model.PPodEntityTest">
        <test-method status="PASS" signature="addAttachment()" name="addAttachment" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="beforeMarahal()" name="beforeMarahal" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
        <test-method status="PASS" signature="getMarshalled()" name="getMarshalled" duration-ms="1" depends-on-groups="init" started-at="2010-04-28T13:09:57Z" finished-at="2010-04-28T13:09:57Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[can't access a PPodVersionInfo through a marshalled PPodEntity]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: can't access a PPodVersionInfo through a marshalled PPodEntity
	at com.google.common.base.Preconditions.checkState(Preconditions.java:139)
	at edu.upenn.cis.ppod.model.PPodEntity.getPPodVersionInfo(PPodEntity.java:252)
	at edu.upenn.cis.ppod.model.PPodEntityTest.getMarshalled(PPodEntityTest.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:644)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:546)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:700)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1002)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:909)
	at org.testng.TestRunner.privateRun(TestRunner.java:618)
	at org.testng.TestRunner.run(TestRunner.java:499)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:915)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:879)
	at org.testng.TestNG.run(TestNG.java:787)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:74)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1009)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="removeAttachment()" name="removeAttachment" duration-ms="0" depends-on-groups="init" started-at="2010-04-28T13:09:57Z" finished-at="2010-04-28T13:09:57Z">
        </test-method>
      </class>
      <class name="edu.upenn.cis.ppod.FactorySetup">
        <test-method status="PASS" signature="succeed()" name="succeed" duration-ms="2" started-at="2010-04-28T13:09:56Z" finished-at="2010-04-28T13:09:56Z">
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>
