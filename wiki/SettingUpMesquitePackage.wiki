#summary How to set up the pPOD Mesquite Package to talk to a pPOD server

==How to set up the pPOD Mesquite Package project under Eclipse to talk to a pPOD server==

  # Check out from the branch you're interested in. Trunk is at https://dbappserv.cis.upenn.edu/svnroot/develop/pPOD/mesquite/trunk/. You'll need to get a dbgroup Subversion account to access that repository. We'll assume that you call your project _pPODMesquitePackage_. We have this project checked in with the Eclipse config files, so (w/ Subclipse) you should just be able to do _Checkout..._ followed by _Check out as a project in the workspace_ and end up with a working Eclipse project.
  # Assuming you already have Mesquite installed, add these entries to Mesquite's _classpath.xml_ file: 
{{{
<classpath>../../pPODMesquitePackage/Mesquite_Folder</classpath>
<classpath>../../pPODMesquitePackage/Extras/config</classpath>  
}}}
  # Now we need to tell the pPOD Mesquite package about the pPOD server. There is an empty file _pPODMesquitePackage/Extras/ppod.properties_ that you can copy and modify. Here's an example _ppod.properties_ file: 
{{{
ppod.uri=https://someserver.edu/ppod-services
ppod.username=myname
ppod.password=mypassword
}}}
  Copy the example _ppod.properties_ into _pPODMesquitePackage/Extras/config_ and modify it with your values. Once in the _config_ folder, it will be on Mesquite's classpath owing to step 2. It should be noted that the _config_ folder has an _svn:ignore=`*`_ property on it, so _ppod.properties_ (or anything else you put in there) will not be committed to the repository. Which is a good thing both to prevent config conflicts with others and to preserve your password's secrecy. So this directory makes a good place to put any other config files that don't make sense to put into Subversion.

And that should be that. 

==Working with the pPOD Server==

===Downloading from the pPOD Server===

After firing up Mesquite, here's how to download from the pPOD server:

  * *_File>Open Other>Download from pPOD Database_* will query pPOD server for the projects it has stored and return a list for you to choose from. 

  * *_File>Open Other>HQL Query against Database_* is experimental (aka "not guaranteed to work"), but [HQLSelectEquusSus here's] what that looks like when it's working.

===Uploading to the pPOD server===

Open up a Nexus file (currently only standard and DNA matrices are supported.) There is a _pPOD_ item in the project window which if clicked will reveal
    * *_Set pPOD Server_* this is not functional
    * *_Download changes_* this will download changes from the pPOD server to your project. This is not supposed to overwrite any local changes, however this is not a well-tested feature and is known not to work with trees.
    * *_Upload changes to Server w/ Molecular Matrices as pPOD Matrices_* this will upload your project storing the data as matrices in the pPOD server. 
    * *_Upload changes to Server w/ Molecular Matrices as pPOD Sequences_* this will upload your project storing the data as sequences in the pPOD server.

  Note that the last two items should appear identical to the user and have to do with how pPOD is storing the matrices internally.